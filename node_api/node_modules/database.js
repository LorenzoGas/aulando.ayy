/*globals require, console, process */
var mysql = require('mysql');
var query = require("queries.js");
var sql,param;
// instantiate mysql
var con = mysql.createConnection({
	host: "www.xoft.cloud",
	user: "aulando",
	database: "aulando",
	password: "aulando"
});
con.connect(function(err) {
	if (err) 
		throw err;
	console.log("Connected!");
});

/**
 * @description restituisce le aule libere al momento
 * @argument giorno giorno nel formato 'gg-mm-aaaa'
 * @argument ora ora nel formato militare 24h. Es: 24:00
 * @argument dipartimento id del dipartimento
 * @return lista di aule in JSON
 */
var auleLibere = function(dipartimento,giorno,ora,callback){
    sql = query.auleLibere;
    param = [dipartimento,giorno,ora,giorno,ora,ora];
    sql = mysql.format(sql,param);
    console.log(sql);
    con.query(sql, function (err, result) {
        if (err) throw err;
        callback(result);
    });
}

/**
 * @description restituisce le aule libere al momento
 * @argument giorno giorno nel formato 'gg-mm-aaaa'
 * @argument dalle ora iniziale nel formato militare 24h. Es: 24:00 
 * @argument alle ora finale nel formato militare 24h. Es: 24:00 
 * @return lista di aule in JSON
 */
var auleLibereDalleAlle = function(dipartimento,giorno,dalle,alle,callback){
    sql = query.auleLibereDalleAlle;
    param = [dipartimento,giorno,alle,dalle,dalle,alle];
    sql = mysql.format(sql,param);
    con.query(sql, function (err, result,fields) {
        if (err) throw err;
        callback(result);
    });
}

/**
 * @description restituisce l'orario giornaliero di una certa aula
 * @argument giorno giorno nel formato 'gg-mm-aaaa'
 * @argument aula aula nel formato 'Aula PC B107'
 * @argument dipartimento id del dipartimento
 * @return lista di lezioni in JSON
 */
var orariAula = function(dipartimento,aula,giorno,callback){
    sql = query.orariAula;
    param = [dipartimento,aula,giorno];
    sql = mysql.format(sql,param);
    console.log(sql);
    con.query(sql,function (err, result,fields) {
        if (err) throw err;
        callback(result);
    });
}

/******************************Funzioni per la restituzione del database puro, senza calcoli
/**
 * @description lista dei dipartimenti esistenti
 * @returns lista dei dipartimenti in JSON
 */
var listaDipartimenti = function(callback){
    sql = query.listaDipartimenti;
    con.query(sql, function (err, result,fields) {
        if (err) throw err;
        callback(result);
    });
}
/**
 * @description lista delle aule esistenti, dato un dipartimento
 * @argument dipartimento id del dipartimento
 * @returns lista delle aula in JSON
 */
var listaAule = function(dipartimento,callback){
    sql = query.listaAule;
    param = [dipartimento];
    sql = mysql.format(sql,param);
    con.query(sql, function (err, result,fields) {
        if (err) throw err;
        callback(result);
    });
}
/**
 * @description lista dei docenti esistenti, dato un dipartimento
 * @argument dipartimento id del dipartimento
 * @returns lista dei docenti in JSON
 */
var listaDocenti = function(dipartimento,callback){
    sql = query.listaDocenti;
    param = [dipartimento];
    sql = mysql.format(sql,param);
    con.query(sql, function (err, result,fields) {
        if (err) throw err;
        callback(result);
    });
   
}
/**
 * @description lista delle materie esistenti, dato un dipartimento
 * @argument dipartimento id del dipartimento
 * @returns lista delle materie in JSON
 */
var listaMaterie = function(dipartimento,callback){
    sql = query.listaMaterie;
    param = [dipartimento];
    sql = mysql.format(sql,param);
    con.query(sql, function (err, result,fields) {
        if (err) throw err;
        callback(result);
    });
    
}
/**
 * @description lista dei corsi esistenti, dato un dipartimento
 * @argument dipartimento codice del dipartimento
 * @returns lista dei corsi in JSON
 */
var listaCorsi = function(dipartimento,callback){
    sql = query.listaCorsi;
    param = [dipartimento];
    sql = mysql.format(sql,param);
    con.query(sql, function (err, result,fields) {
        if (err) throw err;
        callback(result);
    });
    
}
/**
 * @description lista dei subcorsi esistenti, dato un corso
 * @argument dipartimento codice del dipartimento
 * @returns lista dei subcorsi in JSON
 */
var listaSubcorsi = function(dipartimento,callback){
    sql = query.listaSubcorsi;
    param = [dipartimento];
    sql = mysql.format(sql,param);
    con.query(sql, function (err, result,fields) {
        if (err) throw err;
        callback(result);
    });
}

exports.auleLibere = auleLibere;
exports.auleLibereDalleAlle = auleLibereDalleAlle;
exports.orariAula = orariAula;
exports.listaAule = listaAule;
exports.listaDipartimenti = listaDipartimenti;
exports.listaDocenti = listaDocenti;
exports.listaMaterie= listaMaterie;
exports.listaCorsi= listaCorsi;
exports.listaSubcorsi= listaSubcorsi;